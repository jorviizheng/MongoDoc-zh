# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: 2014-04-08 19:28+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-manual/language/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# 64c0c4cf7ed4417fa866db2f28bef586
#: ../source/core/index-compound.txt:7
msgid "Compound Indexes"
msgstr ""

# 364f233c56224dec8abf7082512a8feb
#: ../source/core/index-compound.txt:11
msgid ""
"MongoDB supports *compound indexes*, where a single index structure holds "
"references to multiple fields [#compound-index-field-limit]_ within a "
"collection's documents. The following diagram illustrates an example of a "
"compound index on two fields:"
msgstr ""

# 87a177fd62044ee1afe87c8d14024eb9
#: ../source/core/index-compound.txt:19
msgid ""
"MongoDB imposes a :limit:`limit of 31 fields for any compound index <Number "
"of Indexed Fields in a Compound Index>`."
msgstr ""

# 00131e9e472443ea9a11770ccbafa3a5
#: ../source/core/index-compound.txt:22
msgid "Compound indexes can support queries that match on multiple fields."
msgstr ""

# 33ca76732ad34f14a017c414e04d84f3
#: ../source/core/index-compound.txt:0
msgid "Example"
msgstr ""

# 1ab2040a84124627b0a23364d00d7dc3
#: ../source/core/index-compound.txt:26
msgid ""
"Consider a collection named ``products`` that holds documents that resemble "
"the following document:"
msgstr ""

# 0313b11210d741ef9be9fc7da1c04038
#: ../source/core/index-compound.txt:42
msgid ""
"If applications query on the ``item`` field as well as query on both the "
"``item`` field and the ``stock`` field, you can specify a single compound "
"index to support both of these queries:"
msgstr ""

# 6b320cb6e6eb45408ed333f6320799fa
#: ../source/core/index-compound.txt:50
msgid ""
"You may not create compound indexes that have ``hashed`` index fields. You "
"will receive an error if you attempt to create a compound index that "
"includes :doc:`a hashed index </core/index-hashed>`."
msgstr ""

# 5a91f8d898b3467c86ee4c22d1d32b6b
#: ../source/core/index-compound.txt:55
msgid ""
"The order of the fields in a compound index is very important. In the "
"previous example, the index will contain references to documents sorted "
"first by the values of the ``item`` field and, within each value of the "
"``item`` field, sorted by values of the ``stock`` field. See :ref:`index-"
"ascending-and-descending` for more information."
msgstr ""

# c243f57a5d9d4ac3a56f441ad5817344
#: ../source/core/index-compound.txt:61
msgid ""
"In addition to supporting queries that match on all the index fields, "
"compound indexes can support queries that match on the prefix of the index "
"fields. For details, see :ref:`compound-index-prefix`."
msgstr ""

# 8e7694c9bf29443cafe5b5c902ae3a3f
#: ../source/core/index-compound.txt:69
msgid "Sort Order"
msgstr ""

# 04f0e8336c194ecf8a184b9962b3d7d8
#: ../source/core/index-compound.txt:71
msgid ""
"Indexes store references to fields in either ascending (``1``) or descending"
" (``-1``) sort order. For single-field indexes, the sort order of keys "
"doesn't matter because MongoDB can traverse the index in either direction. "
"However, for :ref:`compound indexes <index-type-compound>`, sort order can "
"matter in determining whether the index can support a sort operation."
msgstr ""

# ab849a4422704b9d91ae2f7fcad4027a
#: ../source/core/index-compound.txt:78
msgid ""
"Consider a collection ``events`` that contains documents with the fields "
"``username`` and ``date``. Applications can issue queries that return "
"results sorted first by ascending ``username`` values and then by descending"
" (i.e. more recent to last) ``date`` values, such as:"
msgstr ""

# 762aad056f63491383206ee3626db034
#: ../source/core/index-compound.txt:87
msgid ""
"or queries that return results sorted first by descending ``username`` "
"values and then by ascending ``date`` values, such as:"
msgstr ""

# a0f9367fcfe34f4291785df3004e9519
#: ../source/core/index-compound.txt:94
msgid "The following index can support both these sort operations:"
msgstr ""

# d433dca4717640228959dfc32bd5f865
#: ../source/core/index-compound.txt:100
msgid ""
"However, the above index **cannot** support sorting by ascending "
"``username`` values and then by ascending ``date`` values, such as the "
"following:"
msgstr ""

# 12d8cb0f6ca64a68b953587e33d60edf
#: ../source/core/index-compound.txt:111
msgid "Prefixes"
msgstr ""

# 17592ce8a1474851872b6dbf8f8efb5a
#: ../source/core/index-compound.txt:113
msgid ""
"Compound indexes support queries on any prefix of the index fields. Index "
"prefixes are the beginning subset of indexed fields. For example, given the "
"index ``{ a: 1, b: 1, c: 1 }``, both ``{ a: 1 }`` and ``{ a: 1, b: 1 }`` are"
" prefixes of the index."
msgstr ""

# d34ebcaf948c487e8a09cfa7fdc51280
#: ../source/core/index-compound.txt:118
msgid ""
"If you have a collection that has a compound index on ``{ a: 1, b: 1 }``, as"
" well as an index that consists of the prefix of that index, i.e. ``{ a: 1 "
"}``, assuming none of the index has a sparse or unique constraints, then you"
" can drop the ``{ a: 1 }`` index. MongoDB will be able to use the compound "
"index in all of situations that it would have used the ``{ a: 1 }`` index."
msgstr ""

# ef7c8d69a8c0464da19628a927fef246
#: ../source/core/index-compound.txt:125
msgid "For example, given the following index:"
msgstr ""

# 4fd6391c45754496ac4d62effb7cc021
#: ../source/core/index-compound.txt:131
msgid "MongoDB **can** use this index to support queries that include:"
msgstr ""

# 6c6ea1e638ad46fdbf7dc45dc9296e96
#: ../source/core/index-compound.txt:133
msgid "the ``item`` field,"
msgstr ""

# e2595caacc0e4d34a1b2d672c1371e8b
#: ../source/core/index-compound.txt:134
msgid "the ``item`` field *and* the ``location`` field,"
msgstr ""

# 7cd3aac028d44602abfd5c284de5c562
#: ../source/core/index-compound.txt:135
msgid ""
"the ``item`` field *and* the ``location`` field *and* the ``stock`` field, "
"or"
msgstr ""

# 28e293043dce47a9a98eb38854086aa3
#: ../source/core/index-compound.txt:137
msgid ""
"only the ``item`` *and* ``stock`` fields; however, this index would be less "
"efficient than an index on only ``item`` and ``stock``."
msgstr ""

# 65e4adf7f25740e19b5c0a81eb2a7b6c
#: ../source/core/index-compound.txt:141
msgid "MongoDB **cannot** use this index to support queries that include:"
msgstr ""

# 144d12d566324c0c95d01f5fd5a0d268
#: ../source/core/index-compound.txt:143
msgid "only the ``location`` field,"
msgstr ""

# 36c121095f18426ea1fc01427894feb6
#: ../source/core/index-compound.txt:144
msgid "only the ``stock`` field, or"
msgstr ""

# 9a4c82817d10453fa5fd6a3fa84f32aa
#: ../source/core/index-compound.txt:145
msgid "only the ``location`` *and* ``stock`` fields."
msgstr ""

# e926f6399a5a4f73b9eac47e8b075363
#: ../source/core/index-compound.txt:148
msgid "Index Intersection"
msgstr ""

# 454a17140b2c43e79e6ade7df3b278cb
#: ../source/includes/fact-index-intersection-vs-compound-indexes.rst:1
msgid ""
"Starting in version 2.6, MongoDB can use :doc:`index intersection </core"
"/index-intersection>` to fulfill queries. The choice between creating "
"compound indexes that support your queries or relying on index intersection "
"depends on the specifics of your system. See :ref:`index-intersection-"
"compound-indexes` for more details."
msgstr ""

# 2be29d138e984f719f340fc3b5799c75
# c8fe8a4b20f9420d96c48e1bd3138be4
#: ../source/core/index-compound.txt:1 ../source/core/index-compound.txt:65
msgid "index"
msgstr ""

# 2be29d138e984f719f340fc3b5799c75
#: ../source/core/index-compound.txt:1
msgid "compound"
msgstr ""

# 945f3cec456b489493efd2bada7b7494
#: ../source/core/index-compound.txt:2
msgid "compound index"
msgstr ""

# c8fe8a4b20f9420d96c48e1bd3138be4
#: ../source/core/index-compound.txt:65
msgid "sort order"
msgstr ""
