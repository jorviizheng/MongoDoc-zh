# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: 2014-04-08 19:31+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-manual/language/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# 80d52ad07c1148e39b517be250f8307d
#: ../source/core/geospatial-indexes.txt:3
msgid "``2d`` Index Internals"
msgstr ""

# 7f2e4cf740684590a1d517ba7a05b7a6
#: ../source/core/geospatial-indexes.txt:7
msgid ""
"This document provides a more in-depth explanation of the internals of "
"MongoDB's ``2d`` geospatial indexes. This material is not necessary for "
"normal operations or application development but may be useful for "
"troubleshooting and for further understanding."
msgstr ""

# d37401584e554328b172e504a4eac6b5
#: ../source/core/geospatial-indexes.txt:15
msgid "Calculation of Geohash Values for ``2d`` Indexes"
msgstr ""

# 1f62b2576e184b42b988b8e67c10051d
#: ../source/core/geospatial-indexes.txt:17
msgid ""
"When you create a geospatial index on :term:`legacy coordinate pairs <legacy"
" coordinate pairs>`, MongoDB computes :term:`geohash` values for the "
"coordinate pairs within the specified :ref:`location range <geospatial-"
"indexes-range>` and then indexes the geohash values."
msgstr ""

# 1a1fa1e4131b48cabfe0b54a24539839
#: ../source/core/geospatial-indexes.txt:22
msgid ""
"To calculate a geohash value, recursively divide a two-dimensional map into "
"quadrants. Then assign each quadrant a two-bit value. For example, a two-bit"
" representation of four quadrants would be:"
msgstr ""

# d9944f62f496448cb070cc124c71a3e5
#: ../source/core/geospatial-indexes.txt:32
msgid ""
"These two-bit values (``00``, ``01``, ``10``, and ``11``) represent each of "
"the quadrants and all points within each quadrant. For a geohash with two "
"bits of resolution, all points in the bottom left quadrant would have a "
"geohash of ``00``. The top left quadrant would have the geohash of ``01``. "
"The bottom right and top right would have a geohash of ``10`` and ``11``, "
"respectively."
msgstr ""

# 8e3f2e2d7da645bd8b5b47ce643c1857
#: ../source/core/geospatial-indexes.txt:39
msgid ""
"To provide additional precision, continue dividing each quadrant into sub-"
"quadrants. Each sub-quadrant would have the geohash value of the containing "
"quadrant concatenated with the value of the sub-quadrant. The geohash for "
"the upper-right quadrant is ``11``, and the geohash for the sub-quadrants "
"would be (clockwise from the top left): ``1101``, ``1111``, ``1110``, and "
"``1100``, respectively."
msgstr ""

# 627eb4564c8c45ce8182417c73506559
#: ../source/core/geospatial-indexes.txt:56
msgid "Multi-location Documents for ``2d`` Indexes"
msgstr ""

# 4b3c828534374d9eaf98bfb2e19b03fa
#: ../source/core/geospatial-indexes.txt:58
msgid "Support for multiple locations in a document."
msgstr ""

# 4869c031f32a4295ac782ee0f40ab383
#: ../source/core/geospatial-indexes.txt:61
msgid ""
"While ``2d`` geospatial indexes do not support more than one set of "
"coordinates in a document, you can use a :ref:`multi-key index <index-type-"
"multi-key>` to index multiple coordinate pairs in a single document. In the "
"simplest example you may have a field (e.g. ``locs``) that holds an array of"
" coordinates, as in the following example:"
msgstr ""

# 828025e99c0f431381efe6da1a4400d9
#: ../source/core/geospatial-indexes.txt:76
msgid ""
"The values of the array may be either arrays, as in ``[ 55.5, 42.3 ]``, or "
"embedded documents, as in ``{ lng : 55.5 , lat : 42.3 }``."
msgstr ""

# eba965cdbc5e4c3c81966e17526fc69f
#: ../source/core/geospatial-indexes.txt:79
msgid ""
"You could then create a geospatial index on the ``locs`` field, as in the "
"following:"
msgstr ""

# 10d66ad532b64f1daa2921c431d823ec
#: ../source/core/geospatial-indexes.txt:86
msgid ""
"You may also model the location data as a field inside of a sub-document. In"
" this case, the document would contain a field (e.g. ``addresses``) that "
"holds an array of documents where each document has a field (e.g. ``loc:``) "
"that holds location coordinates. For example:"
msgstr ""

# e26b4124b0d84c3a9f2ffbdd4dfbfde4
#: ../source/core/geospatial-indexes.txt:107
msgid ""
"You could then create the geospatial index on the ``addresses.loc`` field as"
" in the following example:"
msgstr ""

# c9e8ee28c57c4014a9d2db06138fab37
#: ../source/core/geospatial-indexes.txt:114
msgid ""
"To include the location field with the distance field in multi-location "
"document queries, specify ``includeLocs: true`` in the :dbcommand:`geoNear` "
"command."
msgstr ""
