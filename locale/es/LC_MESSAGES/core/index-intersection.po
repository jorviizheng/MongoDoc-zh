# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011-2014, MongoDB, Inc.
# This file is distributed under the same license as the mongodb-manual package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MongoDB Manual\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-08 13:03-0400\n"
"PO-Revision-Date: 2014-04-08 19:41+0000\n"
"Last-Translator: tychoish <tychoish@gmail.com>\n"
"Language-Team: Spanish (http://www.transifex.com/projects/p/mongodb-manual/language/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# d21956a9b0364d299e95fc5361d64172
#: ../source/core/index-intersection.txt:3
msgid "Index Intersection"
msgstr ""

# 848b9aa57558430ab1b51229b1d5c861
#: ../source/core/index-intersection.txt:9
msgid ""
"MongoDB can use the intersection of multiple indexes to fulfill queries. "
"[#previous-versions]_ In general, each index intersection involves two "
"indexes; however, MongoDB can employ multiple/nested index intersections to "
"resolve a query."
msgstr ""

# f3d701a92e674c398142b3af800d8ecc
#: ../source/core/index-intersection.txt:14
msgid ""
"To illustrate index intersection, consider a collection ``orders`` that has "
"the following indexes:"
msgstr ""

# 4e30484c918a4fdc986ba7a9b2d5ad68
#: ../source/core/index-intersection.txt:22
msgid ""
"MongoDB can use the intersection of the two indexes to support the following"
" query:"
msgstr ""

# 698ec96b9ea4460f8284588b3a433de9
#: ../source/core/index-intersection.txt:29
msgid ""
"For query plans that use index intersection, the :method:`~cursor.explain()`"
" returns the value ``Complex Plan`` in the ``cursor`` field."
msgstr ""

# f48bc2c385f84a0c9ae0dcfa355d6702
#: ../source/core/index-intersection.txt:33
msgid ""
"In previous versions, MongoDB could use only a single index to fulfill most "
"queries. The exception to this is queries with :query:`$or` clauses, which "
"could use a single index for each :query:`$or` clause."
msgstr ""

# 52824f8f10894da7bcb27acbbc3385be
#: ../source/core/index-intersection.txt:39
msgid "Index Prefix Intersection"
msgstr ""

# ab20e3092d39401ba78309eda200f4c9
#: ../source/core/index-intersection.txt:41
msgid ""
"With index intersection, MongoDB can use an intersection of either the "
"entire index or the index prefix. An index prefix is a subset of a compound "
"index, consisting of one or more keys starting from the beginning of the "
"index."
msgstr ""

# 17bde4975db74b728ac849d015d9b04b
#: ../source/core/index-intersection.txt:46
msgid "Consider a collection ``orders`` with the following indexes:"
msgstr ""

# 030a6b2e6e5440d3bf509af6c5905273
#: ../source/core/index-intersection.txt:53
msgid ""
"To fulfill the following query which specifies a condition on both the "
"``qty`` field and the ``status`` field, MongoDB can use the intersection of "
"the two indexes:"
msgstr ""

# ed6e337d94424a11bb6986c0090711b5
#: ../source/core/index-intersection.txt:64
msgid "Index Intersection and Compound Indexes"
msgstr ""

# edb707a035e24b15a3c22de28ee9da29
#: ../source/core/index-intersection.txt:66
msgid ""
"Index intersection does not eliminate the need for creating :doc:`compound "
"indexes </core/index-compound>`. However, because both the list order (i.e. "
"the order in which the keys are listed in the index) and the sort order "
"(i.e. ascending or descending), matter in :doc:`compound indexes </core"
"/index-compound>`, a compound index may not support a query condition that "
"does not include the :ref:`index prefix keys <compound-index-prefix>` or "
"that specifies a different sort order."
msgstr ""

# 7017f69d57b74398b56e1604d54170cc
#: ../source/core/index-intersection.txt:75
msgid ""
"For example, if a collection ``orders`` has the following compound index, "
"with the ``status`` field listed before the ``ord_date`` field:"
msgstr ""

# ea292b42af604bb692b4d421affe54ab
#: ../source/core/index-intersection.txt:82
msgid "The compound index can support the following queries:"
msgstr ""

# 0ff95b16af104f00a4a85d96321c620b
#: ../source/core/index-intersection.txt:94
msgid "But not the following two queries:"
msgstr ""

# 15f5da2cc4f34b91aef371100f642c6d
#: ../source/core/index-intersection.txt:101
msgid "However, if the collection has two separate indexes:"
msgstr ""

# 5877d70ad2934174a9a71af987f22140
#: ../source/core/index-intersection.txt:108
msgid ""
"The two indexes can, either individually or through index intersection, "
"support all four aforementioned queries."
msgstr ""

# 543d01f630904449a85f0035ae693d15
#: ../source/core/index-intersection.txt:111
msgid ""
"The choice between creating compound indexes that support your queries or "
"relying on index intersection depends on the specifics of your system."
msgstr ""

# 1c518f3ba33d4611b53851965e82eb35
#: ../source/core/index-intersection.txt:115
msgid ""
":doc:`compound indexes </core/index-compound>`, :ref:`compound-key-indexes`"
msgstr ""

# 3525931daa8a460da7cde8fe5aa972d2
#: ../source/core/index-intersection.txt:119
msgid "Index Intersection and Sort"
msgstr ""

# c2a2997335a54c14a521fcf5a4682f01
#: ../source/core/index-intersection.txt:121
msgid ""
"Index intersection does not apply when the :method:`~cursor.sort()` "
"operation requires an index completely separate from the query predicate."
msgstr ""

# 274796b1511e4e75ab1d4e6b126d9033
#: ../source/core/index-intersection.txt:125
msgid "For example, the ``orders`` collection has the following indexes:"
msgstr ""

# 715c1fe7f69a4473beea6ec07ed1f718
#: ../source/core/index-intersection.txt:134
msgid ""
"MongoDB cannot use index intersection for the following query with sort:"
msgstr ""

# 94e67b52b5004af48dd1f93b2046158e
#: ../source/core/index-intersection.txt:140
msgid ""
"That is, MongoDB does not use the ``{ qty: 1 }`` index for the query, and "
"the separate ``{ status: 1 }`` or the ``{ status: 1, ord_date: -1 }`` index "
"for the sort."
msgstr ""

# cfcc85243eb3409d841637bdee4849a2
#: ../source/core/index-intersection.txt:144
msgid ""
"However, MongoDB can use index intersection for the following query with "
"sort since the index ``{ status: 1, ord_date: -1 }`` can fulfill part of the"
" query predicate."
msgstr ""
