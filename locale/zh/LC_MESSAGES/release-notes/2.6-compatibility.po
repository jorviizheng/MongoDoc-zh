#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/release-notes/2.6-compatibility.txt:3
msgid "Compatibility Changes in MongoDB 2.6"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:13
msgid ""
"The following 2.6 changes can affect the compatibility with older versions "
"of MongoDB. See :doc:`/release-notes/2.6` for the full list of the 2.6 "
"changes."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:18
msgid "Index Changes"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:23
msgid "Enforce Index Key Length Limit"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:96
#: ../source/release-notes/2.6-compatibility.txt:126
#: ../source/release-notes/2.6-compatibility.txt:158
#: ../source/release-notes/2.6-compatibility.txt:175
#: ../source/release-notes/2.6-compatibility.txt:283
#: ../source/release-notes/2.6-compatibility.txt:300
#: ../source/release-notes/2.6-compatibility.txt:324
#: ../source/release-notes/2.6-compatibility.txt:350
#: ../source/release-notes/2.6-compatibility.txt:387
#: ../source/release-notes/2.6-compatibility.txt:404
#: ../source/release-notes/2.6-compatibility.txt:448
#: ../source/release-notes/2.6-compatibility.txt:468
#: ../source/release-notes/2.6-compatibility.txt:482
#: ../source/release-notes/2.6-compatibility.txt:509
#: ../source/release-notes/2.6-compatibility.txt:525
#: ../source/release-notes/2.6-compatibility.txt:558
#: ../source/release-notes/2.6-compatibility.txt:578
#: ../source/release-notes/2.6-compatibility.txt:607
#: ../source/release-notes/2.6-compatibility.txt:621
#: ../source/release-notes/2.6-compatibility.txt:633
#: ../source/release-notes/2.6-compatibility.txt:653
#: ../source/release-notes/2.6-compatibility.txt:671
#: ../source/release-notes/2.6-compatibility.txt:682
#: ../source/release-notes/2.6-compatibility.txt:743
#: ../source/release-notes/2.6-compatibility.txt:759
#: ../source/release-notes/2.6-compatibility.txt:781
#: ../source/release-notes/2.6-compatibility.txt:798
#: ../source/release-notes/2.6-compatibility.txt:817
#: ../source/release-notes/2.6-compatibility.txt:836
#: ../source/release-notes/2.6-compatibility.txt:861
#: ../source/release-notes/2.6-compatibility.txt:890
#: ../source/release-notes/2.6-compatibility.txt:907
msgid "Description"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:26
msgid ""
"MongoDB 2.6 implements a stronger enforcement of the limit on :limit:`index "
"key <Index Key>`."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:29
msgid ""
"Creating indexes will error if an index key in an existing document exceeds "
"the limit:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:32
msgid ""
":method:`db.collection.ensureIndex()`, :method:`db.collection.reIndex()`, "
":dbcommand:`compact`, and :dbcommand:`repairDatabase` will error and not "
"create the index. Previous versions of MongoDB would create the index but "
"not index such documents."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:38
msgid ""
"Because :method:`db.collection.reIndex()`, :dbcommand:`compact`, and "
":dbcommand:`repairDatabase` drop *all* the indexes from a collection and "
"then recreate them sequentially, the error from the index key limit prevents"
" these operations from rebuilding any remaining indexes for the collection "
"and, in the case of the :dbcommand:`repairDatabase` command, from continuing"
" with the remainder of the process."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:46
msgid "Inserts will error:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:48
msgid ""
":method:`db.collection.insert()` and other operations that perform inserts "
"(e.g. :method:`db.collection.save()` and :method:`db.collection.update()` "
"with ``upsert`` that result in inserts) will fail to insert if the new "
"document has an indexed field whose corresponding index entry exceeds the "
"limit. Previous versions of MongoDB would insert but not index such "
"documents."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:56
msgid ""
":program:`mongorestore` and :program:`mongoimport` will fail to insert if "
"the new document has an indexed field whose corresponding index entry "
"exceeds the limit."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:60
msgid "Updates will error:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:62
msgid ""
":method:`db.collection.update()` and :method:`db.collection.save()` "
"operations on an indexed field will error if the updated value causes the "
"index entry to exceed the limit."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:67
msgid ""
"If an existing document contains an indexed field whose index entry exceeds "
"the limit, updates on other fields that result in the relocation of a "
"document on disk will error."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:71
msgid "Chunk Migration will fail:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:73
msgid ""
"Migrations will fail for a chunk that has a document with an indexed field "
"whose index entry exceeds the limit."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:76
msgid ""
"If left unfixed, the chunk will repeatedly fail migration, effectively "
"ceasing chunk balancing for that collection. Or, if chunk splits occur in "
"response to the migration failures, this response would lead to "
"unnecessarily large number of chunks and an overly large config databases."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:82
msgid "Secondary members of replica sets will warn:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:84
msgid ""
"Secondaries will continue to replicate documents with an indexed field whose"
" corresponding index entry exceeds the limit on initial sync but will print "
"warnings in the logs."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:88
msgid ""
"Secondaries allow index build and rebuild operations on a collection that "
"contains an indexed field whose corresponding index entry exceeds the limit "
"but with warnings in the logs."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:92
msgid ""
"With *mixed version* replica sets where the secondaries are version 2.6 and "
"the primary is version 2.4, secondaries will replicate documents inserted or"
" updated on the 2.4 primary, but will print error messages in the log if the"
" documents contain an indexed field whose corresponding index entry exceeds "
"the limit."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:102
#: ../source/release-notes/2.6-compatibility.txt:132
#: ../source/release-notes/2.6-compatibility.txt:239
#: ../source/release-notes/2.6-compatibility.txt:288
#: ../source/release-notes/2.6-compatibility.txt:306
#: ../source/release-notes/2.6-compatibility.txt:334
#: ../source/release-notes/2.6-compatibility.txt:369
#: ../source/release-notes/2.6-compatibility.txt:392
#: ../source/release-notes/2.6-compatibility.txt:410
#: ../source/release-notes/2.6-compatibility.txt:453
#: ../source/release-notes/2.6-compatibility.txt:474
#: ../source/release-notes/2.6-compatibility.txt:487
#: ../source/release-notes/2.6-compatibility.txt:541
#: ../source/release-notes/2.6-compatibility.txt:564
#: ../source/release-notes/2.6-compatibility.txt:583
#: ../source/release-notes/2.6-compatibility.txt:610
#: ../source/release-notes/2.6-compatibility.txt:661
#: ../source/release-notes/2.6-compatibility.txt:808
#: ../source/release-notes/2.6-compatibility.txt:820
#: ../source/release-notes/2.6-compatibility.txt:864
#: ../source/release-notes/2.6-compatibility.txt:894
#: ../source/release-notes/2.6-compatibility.txt:911
msgid "Solution"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:99
#: ../source/release-notes/2.6-compatibility.txt:129
msgid ""
"Run :method:`db.upgradeCheckAllDBs()` to find current keys that violate this"
" limit and correct as appropriate. Preferably, run the test before "
"upgrading; i.e. connect the 2.6 :program:`mongo` shell to your MongoDB 2.4 "
"database and run the method."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:104
msgid ""
"If you have an existing data set and want to disable the default index key "
"length validation so that you can upgrade before resolving these indexing "
"issues, use the :parameter:`failIndexKeyTooLong` parameter."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:109
msgid "Index Specifications Validate Field Names"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:112
msgid ""
"In MongoDB 2.6, create and re-index operations fail when the index key "
"refers to an empty field, e.g. ``\"a..b\" : 1`` or the field name starts "
"with a dollar sign (``$``)."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:116
msgid ""
":method:`db.collection.ensureIndex()` will not create a new index with an "
"invalid or empty key name."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:119
msgid ""
":method:`db.collection.reIndex()`, :dbcommand:`compact`, and "
":dbcommand:`repairDatabase` will error if an index exists with an invalid or"
" empty key name."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:123
msgid ""
"Chunk migration will fail if an index exists with an invalid or empty key "
"name."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:126
msgid "Previous versions of MongoDB allow the index."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:135
msgid "``ensureIndex`` and Existing Indexes"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:138
msgid ":method:`db.collection.ensureIndex()` now errors:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:140
msgid ""
"if you try to create an existing index but with different options; e.g. in "
"the following example, the second :method:`db.collection.ensureIndex()` will"
" error."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:149
msgid ""
"if you specify an index name that already exists but the key specifications "
"differ; e.g. in the following example, the second "
":method:`db.collection.ensureIndex()` will error."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:158
msgid "Previous versions did not create the index but did not error."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:163
msgid "Write Method Acknowledgements"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:181
msgid ""
"The write methods now return a :method:`WriteResult` object that contains "
"the results of the operation, including any write errors and write concern "
"errors, and obviates the need to call :dbcommand:`getLastError` command to "
"get the status of the results. See :method:`db.collection.insert()`, "
":method:`db.collection.update()`, :method:`db.collection.save()` and "
":method:`db.collection.remove()` for details."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:189
msgid ""
"In sharded environments, :program:`mongos` no longer supports \"fire-and-"
"forget\" behavior. This limits throughput when writing data to sharded "
"clusters."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:203
msgid ""
"Scripts that used these :program:`mongo` shell methods for bulk write "
"operations with \"fire-and-forget\" behavior should use the :method:`Bulk()`"
" methods."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:207
msgid ""
"In sharded environments, applications using any driver or :program:`mongo` "
"shell should use :method:`Bulk()` methods for optimal performance when "
"inserting or modifying groups of documents."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:211
msgid "For example, instead of:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:219
msgid "In MongoDB 2.6, replace with :method:`Bulk()` operation:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:231
msgid ""
"Bulk method returns a :method:`BulkWriteResult` object that contains the "
"result of the operation."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:235
msgid ""
":ref:`rel-notes-write-operations`, :method:`Bulk()`, "
":method:`Bulk.execute()`, "
":method:`db.collection.initializeUnorderedBulkOp()`, "
":method:`db.collection.initializeOrderedBulkOp()`"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:242
msgid "``db.collection.aggregate()`` Change"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:245
msgid ""
"The :method:`db.collection.aggregate()` method in the :program:`mongo` shell"
" defaults to returning a cursor to the results set. This change enables the "
"aggregation pipeline to return result sets of any size and requires cursor "
"iteration to access the result set. For example:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:264
msgid ""
"Previous versions returned a single document with a field ``results`` that "
"contained an array of the result set, subject to the :ref:`BSON Document "
"size <limit-bson-document-size>` limit. Accessing the result set in the "
"previous versions of MongoDB required accessing the ``results`` field and "
"iterating the array. For example:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:286
msgid ""
"Update scripts that currently expect :method:`db.collection.aggregate()` to "
"return a document with a ``results`` array to handle cursors instead."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:290
msgid ":ref:`rn-2.6-aggregation-cursor`, :method:`db.collection.aggregate()`,"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:294
msgid "Write Concern Validation"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:297
msgid ""
"Specifying a write concern that includes ``j: true`` to a :program:`mongod` "
"or :program:`mongos` instance running with :option:`--nojournal` option now "
"errors. Previous versions would ignore the ``j: true``."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:303
msgid ""
"Either remove the ``j: true`` specification from the write concern when "
"issued against a :program:`mongod` or :program:`mongos` instance with "
":option:`--nojournal` or run :program:`mongod` or :program:`mongos` with "
"journaling."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:309
msgid "Security Changes"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:314
msgid "New Authorization Model"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:317
msgid ""
"MongoDB 2.6 :ref:`authorization model <authorization>` changes how MongoDB "
"stores and manages user privilege information:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:320
msgid ""
"Before the upgrade, MongoDB 2.6 requires at least one user in the admin "
"database."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:323
msgid ""
"MongoDB versions using older models cannot create/modify users or create "
"user-defined roles."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:327
msgid ""
"Ensure that at least one user exists in the admin database. If no user "
"exists in the admin database, add a user. Then upgrade to MongoDB 2.6. "
"Finally, upgrade the user privilege model. See :doc:`/release-"
"notes/2.6-upgrade`."
msgstr ""

#: ../source/includes/important-upgrade-auth-model-prerequisites.rst:3
msgid ""
"Before upgrading the authorization model, you should first upgrade MongoDB "
"binaries to 2.6. For sharded clusters, ensure that **all** cluster "
"components are 2.6. If there are users in any database, be sure you have at "
"least one user in the ``admin`` database with the role "
":authrole:`userAdminAnyDatabase` **before** upgrading the MongoDB binaries."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:336
msgid ":ref:`2.6-relnotes-security`"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:341
msgid "SSL Certificate Hostname Validation"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:344
msgid ""
"The SSL certificate validation now checks the Common Name (``CN``) and the "
"Subject Alternative Name (``SAN``) fields to ensure that either the ``CN`` "
"or one of the ``SAN`` entries matches the hostname of the server. As a "
"result, if you currently use SSL and *neither* the ``CN`` nor any of the "
"``SAN`` entries of your current SSL certificates match the hostnames, "
"upgrading to version 2.6 will cause the SSL connections to fail."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:353
msgid ""
"To allow for the continued use of these certificates, MongoDB provides the "
":setting:`~net.ssl.allowInvalidCertificates` setting. The setting is "
"available for:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:357
msgid ""
":program:`mongod` and :program:`mongos` to bypass the validation of SSL "
"certificates on other servers in the cluster."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:360
msgid ""
":program:`mongo` shell, :ref:`MongoDB tools that support SSL <mongodb-tools-"
"support-ssl>`, and the C++ driver to bypass the validation of server "
"certificates."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:364
msgid ""
"When using the :setting:`~net.ssl.allowInvalidCertificates` setting, MongoDB"
" logs as a warning the use of the invalid certificates."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:367
msgid ""
"The :setting:`~net.ssl.allowInvalidCertificates` setting bypasses the other "
"certificate validation, such as checks for expiration and valid signatures."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:374
msgid "``2dsphere`` Index Version 2"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:377
msgid ""
"MongoDB 2.6 introduces a version 2 of the :doc:`2dsphere index "
"</core/2dsphere>`. If a document lacks a ``2dsphere`` index field (or the "
"field is ``null`` or an empty array), MongoDB does not add an entry for the "
"document to the ``2dsphere`` index. For inserts, MongoDB inserts the "
"document but does not add to the ``2dsphere`` index."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:384
msgid ""
"Previous version would not insert documents where the ``2dsphere`` index "
"field is a ``null`` or an empty array. For documents that lack the "
"``2dsphere`` index field, previous versions would insert and index the "
"document."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:390
msgid ""
"To revert to old behavior, create the ``2dsphere`` index with ``{ "
"\"2dsphereIndexVersion\" : 1 }`` to create a version 1 index. However, "
"version 1 index cannot use the new GeoJSON geometries."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:394
msgid ":ref:`2dsphere-v2`"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:397
msgid "Log Messages"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:400
msgid "Timestamp Format Change"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:403
msgid ""
"Each message now starts with the timestamp format given in :ref:`2.6-time-"
"format-changes`. Previous versions used the ``ctime`` format."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:407
msgid ""
"MongoDB adds a new option :option:`--timeStampFormat` which supports "
"timestamp format in :option:`ctime <--timeStampFormat>`, "
":option:`iso8601-utc <--timeStampFormat>`, and :option:`iso8601-local "
"<--timeStampFormat>` (new default)."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:436
msgid "Package Configuration Changes"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:441
msgid "Default ``bindIp`` for RPM/DEB Packages"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:444
msgid ""
"In the official MongoDB packages in RPM (Red Hat, CentOS, Fedora Linux, and "
"derivatives) and DEB (Debian, Ubuntu, and derivatives), the default "
":setting:`~net.bindIp` value attaches MongoDB components to the localhost "
"interface *only*. These packages set this default in the default "
"configuration file (i.e. ``/etc/mongod.conf``.)"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:451
msgid ""
"If you use one of these packages and have *not* modified the default "
"``/etc/mongod.conf`` file, you will need to set :setting:`~net.bindIp` "
"before or during the upgrade."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:455
msgid ""
"There is no default :setting:`~net.bindIp` setting in any other official "
"MongoDB packages."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:461
msgid "SNMP Changes"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:464
msgid ""
"The IANA enterprise identifier for MongoDB changed from 37601 to 34601."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:467
msgid ""
"MongoDB changed the MIB field name ``globalopcounts`` to ``globalOpcounts``."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:471
msgid ""
"Users of SNMP monitoring must modify their SNMP configuration (i.e. MIB) "
"from 37601 to 34601."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:474
msgid "Update references to ``globalopcounts`` to ``globalOpcounts``."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:477
msgid "Remove Method Signature Change"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:480
msgid ""
":method:`db.collection.remove()` requires a query document as a parameter. "
"In previous versions, the method invocation without a query document deleted"
" all documents in a collection."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:485
msgid ""
"For existing :method:`db.collection.remove()` invocations without a query "
"document, modify the invocations to include an empty document "
":method:`db.collection.remove({})`."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:492
msgid "Update Operator Syntax Validation"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:495
msgid ""
":doc:`Update operators (e.g $set) </reference/operator/update>` must specify"
" a non-empty operand expression. For example, the following expression is "
"now invalid:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:503
msgid ""
":doc:`Update operators (e.g $set) </reference/operator/update>` cannot "
"repeat in the update statement. For example, the following expression is "
"invalid:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:517
msgid "Updates Enforce Field Name Restrictions"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:520
msgid ""
"Updates cannot use :doc:`update operators (e.g $set) "
"</reference/operator/update>` to target fields with empty field names (i.e. "
"``\"\"``)."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:524
msgid ""
"Updates no longer support saving field names that contain a dot (``.``) or a"
" field name that starts with a dollar sign (``$``)."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:528
msgid ""
"For existing documents that have fields with empty names ``\"\"``, replace "
"the whole document. See :method:`db.collection.update()` and "
":method:`db.collection.save()` for details on replacing an existing "
"document."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:533
msgid ""
"For existing documents that have fields with names that contain a dot "
"(``.``), either replace the whole document or :update:`unset <$unset>` the "
"field. To find fields whose names contain a dot, run "
":method:`db.upgradeCheckAllDBs()`."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:538
msgid ""
"For existing documents that have fields with names that start with a dollar "
"sign (``$``), :update:`unset <$unset>` or :update:`rename <$rename>` those "
"fields. To find fields whose names start with a dollar sign, run "
":method:`db.upgradeCheckAllDBs()`."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:543
msgid ""
"See :ref:`rel-notes-write-operations` for the changes to the write operation"
" protocol, and :ref:`rel-notes-data-modification` for the changes to the "
"insert and update operations. Also consider the documentation of the "
":limit:`Restrictions on Field Names`."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:549
msgid "Query and Sort Changes"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:554
msgid "Enforce Field Name Restrictions"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:557
msgid ""
"Queries cannot specify conditions on fields with names that start with a "
"dollar sign (``$``)."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:561
msgid ""
":update:`Unset <$unset>` or :update:`rename <$rename>` existing fields whose"
" names start with a dollar sign (``$``). Run "
":method:`db.upgradeCheckAllDBs()` to find fields whose names start with a "
"dollar sign."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:569
msgid "Sparse Index and Incomplete Results"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:572
msgid ""
"If a :doc:`sparse index </core/index-sparse>` results in an incomplete "
"result set for queries and sort operations, MongoDB will not use that index "
"unless a :method:`~cursor.hint()` explicitly specifies the index."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:577
msgid ""
"For example, the query ``{ x: { $exists: false } }`` will no longer use a "
"sparse index on the ``x`` field, unless explicitly hinted."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:581
msgid ""
"To override the behavior to use the sparse index and return incomplete "
"results, explicitly specify the index with a :method:`~cursor.hint()`."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:585
msgid ""
"See :ref:`sparse-index-incomplete-results` for an example that details the "
"new behavior."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:591
msgid "``sort()`` Specification Values"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:594
msgid ""
"The :method:`~cursor.sort()` method **only** accepts the following values "
"for the sort keys:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:597
msgid "``1`` to specify ascending order for a field,"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:599
msgid "``-1`` to specify descending order for a field, or"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:601
msgid ""
":projection:`$meta` expression to specify sort by the text search score."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:604
msgid "Any other value will result in an error."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:606
msgid ""
"Previous versions also accepted either ``true`` or ``false`` for ascending."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:610
msgid "Update sort key values that use ``true`` or ``false`` to ``1``."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:615
msgid "``skip()`` and ``_id`` Queries"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:618
msgid "Equality match on the ``_id`` field obeys :method:`~cursor.skip()`."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:620
msgid ""
"Previous versions ignored :method:`~cursor.skip()` when performing an "
"equality match on the ``_id`` field."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:626
msgid "``explain()`` Retains Query Plan Cache"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:629
msgid ""
":method:`~cursor.explain()` no longer clears the :doc:`query plans </core"
"/query-plans>` cached for that :term:`query shape`."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:632
msgid ""
"In previous versions, :method:`~cursor.explain()` would have the side effect"
" of clearing the query plan cache for that query shape."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:635
msgid "The :method:`PlanCache() <db.collection.getPlanCache()>` reference."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:638
msgid "Geospatial Changes"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:643
msgid "``$maxDistance`` Changes"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:646
msgid ""
"For :query:`$near` queries on GeoJSON data, if the queries specify a "
":query:`$maxDistance`, :query:`$maxDistance` must be inside of the "
":query:`$near` document."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:650
msgid ""
"In previous version, :query:`$maxDistance` could be either inside or outside"
" the :query:`$near` document."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:653
msgid ":query:`$maxDistance` must be a positive value."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:656
msgid ""
"Update any existing :query:`$near` queries on GeoJSON data that currently "
"have the :query:`$maxDistance` outside the :query:`$near` document"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:660
msgid ""
"Update any existing queries where :query:`$maxDistance` is a negative value."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:666
msgid "Deprecated ``$uniqueDocs``"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:669
msgid ""
"MongoDB 2.6 deprecates :query:`$uniqueDocs`, and geospatial queries no "
"longer return duplicated results when a document matches the query multiple "
"times."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:676
msgid "Stronger Validation of Geospatial Queries"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:679
msgid ""
"MongoDB 2.6 enforces a stronger validation of geospatial queries, such as "
"validating the options or GeoJSON specifications, and errors if the "
"geospatial query is invalid. Previous versions allowed/ignored invalid "
"options."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:685
msgid "Query Operator Changes"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:690
msgid "``$not`` Query Behavior Changes"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:693
msgid "Queries with :query:`$not` expressions on an indexed field now match:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:695
msgid ""
"Documents that are missing the indexed field. Previous versions would not "
"return these documents using the index."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:698
msgid ""
"Documents whose indexed field value is a different type than that of the "
"specified value. Previous versions would not return these documents using "
"the index."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:702
msgid ""
"For example, if a collection ``orders`` contains the following documents:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:711
msgid "If the collection has an index on the ``price`` field:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:717
msgid ""
"The following query uses the index to search for documents where ``price`` "
"is not greater than or equal to ``50``:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:724
msgid "In 2.6, the query returns the following documents:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:732
msgid ""
"In previous versions, indexed plans would only return matching documents "
"where the type of the field matches the type of the query predicate:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:740
msgid ""
"If using a collection scan, previous versions would return the same results "
"as those in 2.6."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:743
msgid "MongoDB 2.6 allows chaining of :query:`$not` expressions."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:748
msgid "``null`` Comparison Queries"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:751
msgid ""
":query:`$lt` and :query:`$gt` comparisons to ``null`` no longer match "
"documents that are missing the field."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:754
msgid ""
"``null`` equality conditions on array elements (e.g. ``\"a.b\": null``) no "
"longer match document missing the nested field ``a.b`` (e.g. ``a: [ 2, 3 "
"]``)."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:758
msgid ""
"``null`` equality queries (i.e. ``field: null`` ) now match fields with "
"values ``undefined``."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:764
msgid "``$all`` Operator Behavior Change"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:767
msgid ""
"The :query:`$all` operator is now equivalent to an :query:`$and` operation "
"of the specified values. This change in behavior can allow for more matches "
"than previous versions when passed an array of a single nested array (e.g. "
"``[ [ \"A\" ] ]``). When passed an array of a nested array, :query:`$all` "
"can now match documents where the field contains the nested array as an "
"element (e.g. ``field: [ [ \"A\" ], ... ]``), *or* the field equals the "
"nested array (e.g. ``field: [ \"A\", \"B\" ]``). Earlier version could only "
"match documents where the field contains the nested array."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:777
msgid ""
"The :query:`$all` operator returns no match if the array field contains "
"nested arrays (e.g. ``field: [ \"a\", [\"b\"] ]``) and :query:`$all` on the "
"nested field is the element of the nested array (e.g. ``\"field.1\": { $all:"
" [ \"b\" ] }``). Previous versions would return a match."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:786
msgid "``$mod`` Operator Enforces Strict Syntax"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:789
msgid ""
"The :query:`$mod` operator now only accepts an array with exactly two "
"elements, and errors when passed an array with fewer or more elements. See "
":ref:`mod-not-enough-elements` and :ref:`mod-too-many-elements` for details."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:794
msgid ""
"In previous versions, if passed an array with one element, the :query:`$mod`"
" operator uses ``0`` as the second element, and if passed an array with more"
" than two elements, the :query:`$mod` ignores all but the first two "
"elements. Previous versions do return an error when passed an empty array."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:801
msgid ""
"Ensure that the array passed to :query:`$mod` contains exactly two elements:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:804
msgid ""
"If the array contains the a single element, add ``0`` as the second element."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:807
msgid ""
"If the array contains more than two elements, remove the extra elements."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:813
msgid "``$where`` Must Be Top-Level"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:816
msgid ""
":query:`$where` expressions can now only be at top level and cannot be "
"nested within another expression, such as :query:`$elemMatch`."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:820
msgid "Update existing queries that nest :query:`$where`."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:823
msgid "``$exists`` and ``notablescan``"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:825
msgid ""
"If the MongoDB server has disabled collection scans, i.e. "
":parameter:`notablescan`, then :query:`$exists` queries that have no "
"*indexed solution* will error."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:832
msgid "``MinKey`` and ``MaxKey`` Queries"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:835
msgid ""
"Equality match for either ``MinKey`` or ``MaxKey`` no longer match documents"
" missing the field."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:843
msgid "Nested Array Queries with $elemMatch"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:846
msgid ""
"The :query:`$elemMatch` query operator no longer traverses recursively into "
"nested arrays."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:849
msgid "For example, if a collection ``test`` contains the following document:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:856
msgid ""
"In 2.6, the following :query:`$elemMatch` query does *not* match the "
"document:"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:864
msgid "Update existing queries that rely upon the old behavior."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:867
msgid "Text Search Compatibility"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:869
msgid ""
"MongoDB does not support the use of the :query:`$text` query operator in "
"mixed sharded cluster deployments that contain both version 2.4 and version "
"2.6 shards. See :doc:`/release-notes/2.6-upgrade` for upgrade instructions."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:875
msgid "Replica Set/Sharded Cluster Validation"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:880
msgid "Shard Name Checks on Metadata Refresh"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:883
msgid ""
"For sharded clusters, MongoDB 2.6 disallows a shard from refreshing the "
"metadata if the shard name has not been explicitly set."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:886
msgid ""
"For mixed sharded cluster deployments that contain both version 2.4 and "
"version 2.6 shards, this change can cause errors when migrating chunks "
"**from** version 2.4 shards **to** version 2.6 shards if the shard name is "
"unknown to the version 2.6 shards. MongoDB does not support migrations in "
"mixed sharded cluster deployments."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:893
msgid ""
"Upgrade all components of the cluster to 2.6. See :doc:`/release-"
"notes/2.6-upgrade`."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:899
msgid "Replica Set Vote Configuration Validation"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:902
msgid ""
"MongoDB now deprecates giving any :term:`replica set` member more than a "
"single vote. During configuration, "
":data:`local.system.replset.members[n].votes` should only have a value of 1 "
"for voting members and 0 for non-voting members. MongoDB treats values other"
" than 1 or 0 as a value of 1 and produces a warning message."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:910
msgid ""
"Update :data:`local.system.replset.members[n].votes` with values other than "
"1 or 0 to 1 or 0 as appropriate."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:916
msgid "Time Format Changes"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:918
msgid ""
"MongoDB now uses ``iso8601-local`` when formatting time data in many "
"outputs. This format follows the template ``YYYY-MM-"
"DDTHH:mm:ss.mmm<+/-Offset>``. For example, ``2014-03-04T20:13:38.944-0500``."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:922
msgid ""
"This change impacts all clients using :doc:`Extended JSON </reference"
"/mongodb-extended-json>` in *Strict mode*, such as :program:`mongoexport` "
"and the :ecosystem:`REST and HTTP Interfaces </tools/http-interfaces>`."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:930
msgid "Other Resources"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:932
msgid ""
"`All backwards incompatible changes (JIRA) "
"<https://jira.mongodb.org/issues/?jql=project%20%3D%20SERVER%20AND%20fixVersion%20in%20(%222.5.0%22%2C%20%222.5.1%22%2C%20%222.5.2%22%2C%20%222.5.3%22%2C%20%222.5.4%22%2C%20%222.5.5%22%2C%20%222.6.0-rc1%22%2C%20%222.6.0-rc2%22)%20AND%20%22Backwards%20Compatibility%22%20in%20%20(%22Major%20Change%22%2C%20%22Minor%20Change%22)%20ORDER%20BY%20votes%20DESC%2C%20issuetype%20DESC%2C%20key%20DESC>`_."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:934
msgid ":doc:`/release-notes/2.6`."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:936
msgid ":doc:`/release-notes/2.6-upgrade` for the upgrade process."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:0
msgid "On this page"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:166
msgid ""
"The :program:`mongo` shell write methods :method:`db.collection.insert()`, "
":method:`db.collection.update()`, :method:`db.collection.save()` and "
":method:`db.collection.remove()` now integrate the :doc:`write concern "
"</reference/write-concern>` directly into the method rather than with a "
"separate :dbcommand:`getLastError` command to provide :ref:`acknowledgement "
"of writes <wc-w>` whether run interactively in the :program:`mongo` shell or"
" non-interactively in a script. In previous versions, these methods "
"exhibited a \"fire-and-forget\" behavior. [#mongo-shell-gle-interactive]_"
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:177
msgid ""
"Existing scripts for the :program:`mongo` shell that used these methods will"
" now wait for acknowledgement, which take **longer** than the previous "
"\"fire-and-forget\" behavior."
msgstr ""

#: ../source/release-notes/2.6-compatibility.txt:194
msgid ""
"In previous versions, when using the :program:`mongo` shell interactively, "
"the :program:`mongo` shell automatically called the "
":dbcommand:`getLastError` command after a write method to provide "
"acknowledgment of the write. Scripts, however, would observe \"fire-and-"
"forget\" behavior in previous versions unless the scripts included an "
"**explicit** call to the :dbcommand:`getLastError` command after a write "
"method."
msgstr ""

#~ msgid ""
#~ "The :program:`mongo` shell write methods :method:`db.collection.insert()`, "
#~ ":method:`db.collection.update()`, :method:`db.collection.save()` and "
#~ ":method:`db.collection.remove()` now integrate the :doc:`write concern "
#~ "</core/write-concern>` directly into the method rather than with a separate "
#~ ":dbcommand:`getLastError` command to provide :ref:`safe writes <write-"
#~ "concern-acknowledged>` whether run interactively in the :program:`mongo` "
#~ "shell or non-interactively in a script. In previous versions, these methods "
#~ "exhibited a \"fire-and-forget\" behavior. [#mongo-shell-gle-interactive]_"
#~ msgstr ""

#~ msgid ""
#~ "Existing scripts for the :program:`mongo` shell that used these methods will"
#~ " now observe safe writes which take **longer** than the previous \"fire-and-"
#~ "forget\" behavior."
#~ msgstr ""

#~ msgid ""
#~ "In previous versions, when using the :program:`mongo` shell interactively, "
#~ "the :program:`mongo` shell automatically called the "
#~ ":dbcommand:`getLastError` command after a write method to provide \"safe "
#~ "writes\". Scripts, however, would observe \"fire-and-forget\" behavior in "
#~ "previous versions unless the scripts included an **explicit** call to the "
#~ ":dbcommand:`getLastError` command after a write method."
#~ msgstr ""
