#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/index-multikey.txt:7
msgid "Multikey Indexes"
msgstr ""

#: ../source/core/index-multikey.txt:17
msgid ""
"To index a field that holds an array value, MongoDB creates an index key for"
" each element in the array. These *multikey* indexes support efficient "
"queries against array fields. Multikey indexes can be constructed over "
"arrays that hold both scalar values (e.g. strings, numbers) *and* nested "
"documents."
msgstr ""

#: ../source/core/index-multikey.txt:26
msgid "Create Multikey Index"
msgstr ""

#: ../source/core/index-multikey.txt:28
msgid ""
"To create a multikey index, use the :method:`db.collection.createIndex()` "
"method:"
msgstr ""

#: ../source/core/index-multikey.txt:35
msgid ""
"MongoDB automatically creates a multikey index if any indexed field is an "
"array; you do not need to explicitly specify the multikey type."
msgstr ""

#: ../source/core/index-multikey.txt:39
msgid "Index Bounds"
msgstr ""

#: ../source/core/index-multikey.txt:41
msgid ""
"If an index is multikey, then computation of the index bounds follows "
"special rules. For details on multikey index bounds, see :doc:`/core"
"/multikey-index-bounds`."
msgstr ""

#: ../source/core/index-multikey.txt:46
msgid "Limitations"
msgstr ""

#: ../source/core/index-multikey.txt:49
msgid "Compound Multikey Indexes"
msgstr ""

#: ../source/core/index-multikey.txt:51
msgid ""
"For a :ref:`compound <index-type-compound>` multikey index, each indexed "
"document can have *at most* one indexed field whose value is an array. As "
"such, you cannot create a compound multikey index if more than one to-be-"
"indexed field of a document is an array. Or, if a compound multikey index "
"already exists, you cannot insert a document that would violate this "
"restriction."
msgstr ""

#: ../source/core/index-multikey.txt:58
msgid ""
"For example, consider a collection that contains the following document:"
msgstr ""

#: ../source/core/index-multikey.txt:64
msgid ""
"You cannot create a compound multikey index ``{ a: 1, b: 1 }`` on the "
"collection since both the ``a`` and ``b`` fields are arrays."
msgstr ""

#: ../source/core/index-multikey.txt:67
msgid "But consider a collection that contains the following documents:"
msgstr ""

#: ../source/core/index-multikey.txt:74
msgid ""
"A compound multikey index ``{ a: 1, b: 1 }`` is permissible since for each "
"document, only one field indexed by the compound multikey index is an array;"
" i.e. no document contains array values for both ``a`` and ``b`` fields. "
"After creating the compound multikey index, if you attempt to insert a "
"document where both ``a`` and ``b`` fields are arrays, MongoDB will fail the"
" insert."
msgstr ""

#: ../source/core/index-multikey.txt:82
msgid "Shard Keys"
msgstr ""

#: ../source/core/index-multikey.txt:84
msgid "You **cannot** specify a multikey index as the shard key index."
msgstr ""

#: ../source/core/index-multikey.txt:88
msgid ""
"However, if the shard key index is a :ref:`prefix <compound-index-prefix>` "
"of a compound index, the compound index is allowed to become a compound "
"*multikey* index if one of the other keys (i.e. keys that are not part of "
"the shard key) indexes an array. Compound multikey indexes can have an "
"impact on performance."
msgstr ""

#: ../source/core/index-multikey.txt:95
msgid "Hashed Indexes"
msgstr ""

#: ../source/core/index-multikey.txt:97
msgid ":doc:`Hashed </core/index-hashed>` indexes **cannot** be multikey."
msgstr ""

#: ../source/core/index-multikey.txt:100
msgid "Covered Queries"
msgstr ""

#: ../source/includes/fact-multikey-index-covered-query.rst:1
msgid ""
"A :ref:`multikey index <index-type-multikey>` cannot support a :ref:`covered"
" query <covered-queries>`."
msgstr ""

#: ../source/core/index-multikey.txt:145
msgid "Examples"
msgstr ""

#: ../source/core/index-multikey.txt:148
msgid "Index Basic Arrays"
msgstr ""

#: ../source/core/index-multikey.txt:150
msgid "Consider a ``survey`` collection with the following document:"
msgstr ""

#: ../source/core/index-multikey.txt:156
msgid "Create an index on the field ``ratings``:"
msgstr ""

#: ../source/core/index-multikey.txt:162
msgid ""
"Since the ``ratings`` field contains an array, the index on ``ratings`` is "
"multikey. The multikey index contains the following three index keys, each "
"pointing to the same document:"
msgstr ""

#: ../source/core/index-multikey.txt:166
msgid "``2``,"
msgstr ""

#: ../source/core/index-multikey.txt:168
msgid "``5``, and"
msgstr ""

#: ../source/core/index-multikey.txt:170
msgid "``9``."
msgstr ""

#: ../source/core/index-multikey.txt:173
msgid "Index Arrays with Embedded Documents"
msgstr ""

#: ../source/core/index-multikey.txt:175
msgid ""
"You can create multikey indexes on array fields that contain nested objects."
msgstr ""

#: ../source/core/index-multikey.txt:178
msgid ""
"Consider an ``inventory`` collection with documents of the following form:"
msgstr ""

#: ../source/core/index-multikey.txt:214
msgid ""
"The following operation creates a multikey index on the ``stock.size`` and "
"``stock.quantity`` fields:"
msgstr ""

#: ../source/core/index-multikey.txt:221
msgid ""
"The compound multikey index can support queries with predicates that include"
" both indexed fields as well as predicates that include only the index "
"prefix ``\"stock.size\"``, as in the following examples:"
msgstr ""

#: ../source/core/index-multikey.txt:230
msgid ""
"For details on how MongoDB can combine multikey index bounds, see "
":doc:`/core/multikey-index-bounds`. For more information on behavior of "
"compound indexes and prefixes, see :ref:`compound indexes and prefixes "
"<compound-index-prefix>`."
msgstr ""

#: ../source/core/index-multikey.txt:235
msgid ""
"The compound multikey index can also support sort operations, such as the "
"following examples:"
msgstr ""

#: ../source/core/index-multikey.txt:243
msgid ""
"For more information on behavior of compound indexes and sort operations, "
"see :doc:`/tutorial/sort-results-with-indexes`."
msgstr ""

#: ../source/core/index-multikey.txt:1
msgid "index"
msgstr ""

#: ../source/core/index-multikey.txt:1
msgid "multikey"
msgstr ""

#: ../source/core/index-multikey.txt:0
msgid "On this page"
msgstr ""

#: ../source/core/index-multikey.txt:105
msgid "Query on the Array Field as a Whole"
msgstr ""

#: ../source/core/index-multikey.txt:107
msgid ""
"When a query filter specifies an :ref:`exact match for an array as a whole "
"<array-match-exact>`, MongoDB can use the multikey index to look up the "
"first element of the query array but cannot use the multikey index scan to "
"find the whole array. Instead, after using the multikey index to look up the"
" first element of the query array, MongoDB retrieves the associated "
"documents and filters for documents whose array matches the array in the "
"query."
msgstr ""

#: ../source/core/index-multikey.txt:115
msgid ""
"For example, consider an ``inventory`` collection that contains the "
"following documents:"
msgstr ""

#: ../source/core/index-multikey.txt:126
msgid "The collection has a multikey index on the ``ratings`` field:"
msgstr ""

#: ../source/core/index-multikey.txt:132
msgid ""
"The following query looks for documents where the ``ratings`` field is the "
"array ``[ 5, 9 ]``:"
msgstr ""

#: ../source/core/index-multikey.txt:139
msgid ""
"MongoDB can use the multikey index to find documents that have ``5`` at any "
"position in the ``ratings`` array. Then, MongoDB retrieves these documents "
"and filters for documents whose ``ratings`` array equals the query array ``["
" 5, 9 ]``."
msgstr ""
