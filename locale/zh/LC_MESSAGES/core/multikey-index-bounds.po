#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/core/multikey-index-bounds.txt:3
msgid "Multikey Index Bounds"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:13
msgid ""
"The bounds of an index scan define the portions of an index to search during"
" a query. When multiple predicates over an index exist, MongoDB will attempt"
" to combine the bounds for these predicates by either *intersection* or "
"*compounding* in order to produce a scan with smaller bounds."
msgstr ""

#: ../source/core/multikey-index-bounds.txt:22
msgid "Intersect Bounds for Multikey Index"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:24
msgid ""
"Bounds intersection refers to a logical conjunction (i.e. ``AND``) of "
"multiple bounds. For instance, given two bounds ``[ [ 3, Infinity ] ]`` and "
"``[ [ -Infinity, 6 ] ]``, the intersection of the bounds results in ``[ [ 3,"
" 6 ] ]``."
msgstr ""

#: ../source/core/multikey-index-bounds.txt:29
msgid ""
"Given an :ref:`indexed <index-type-multikey>` array field, consider a query "
"that specifies multiple predicates on the array and can use a :ref:`multikey"
" index <index-type-multikey>`. MongoDB can intersect :ref:`multikey index "
"<index-type-multikey>` bounds if an :query:`$elemMatch` joins the "
"predicates."
msgstr ""

#: ../source/core/multikey-index-bounds.txt:35
msgid ""
"For example, a collection ``survey`` contains documents with a field "
"``item`` and an array field ``ratings``:"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:43
msgid ""
"Create a :ref:`multikey index <index-type-multikey>` on the ``ratings`` "
"array:"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:50
msgid ""
"The following query uses :query:`$elemMatch` to require that the array "
"contains at least one *single* element that matches both conditions:"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:57
#: ../source/core/multikey-index-bounds.txt:130
#: ../source/core/multikey-index-bounds.txt:190
#: ../source/core/multikey-index-bounds.txt:266
#: ../source/core/multikey-index-bounds.txt:407
msgid "Taking the predicates separately:"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:59
msgid ""
"the bounds for the greater than or equal to 3 predicate (i.e. ``$gte: 3``) "
"are ``[ [ 3, Infinity ] ]``;"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:62
msgid ""
"the bounds for the less than or equal to 6 predicate (i.e. ``$lte: 6``) are "
"``[ [ -Infinity, 6 ] ]``."
msgstr ""

#: ../source/core/multikey-index-bounds.txt:65
msgid ""
"Because the query uses :query:`$elemMatch` to join these predicates, MongoDB"
" can intersect the bounds to:"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:72
msgid ""
"If the query does *not* join the conditions on the array field with "
":query:`$elemMatch`, MongoDB cannot intersect the multikey index bounds. "
"Consider the following query:"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:80
msgid ""
"The query searches the ``ratings`` array for at least one element greater "
"than or equal to 3 and at least one element less than or equal to 6. Because"
" a single element does not need to meet both criteria, MongoDB does *not* "
"intersect the bounds and uses either ``[ [ 3, Infinity ] ]`` or ``[ [ "
"-Infinity, 6 ] ]``. MongoDB makes no guarantee as to which of these two "
"bounds it chooses."
msgstr ""

#: ../source/core/multikey-index-bounds.txt:88
msgid "Compound Bounds for Multikey Index"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:90
msgid ""
"Compounding bounds refers to using bounds for multiple keys of "
":ref:`compound index <index-type-compound>`. For instance, given a compound "
"index ``{ a: 1, b: 1 }`` with bounds on field ``a`` of ``[ [ 3, Infinity ] "
"]`` and bounds on field ``b`` of ``[ [ -Infinity, 6 ] ]``, compounding the "
"bounds results in the use of both bounds:"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:100
msgid ""
"If MongoDB cannot compound the two bounds, MongoDB always constrains the "
"index scan by the bound on its leading field, in this case, ``a: [ [ 3, "
"Infinity ] ]``."
msgstr ""

#: ../source/core/multikey-index-bounds.txt:105
msgid "Compound Index on an Array Field"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:107
msgid ""
"Consider a compound multikey index; i.e. a :ref:`compound index <index-type-"
"compound>` where one of the indexed fields is an array. For example, a "
"collection ``survey`` contains documents with a field ``item`` and an array "
"field ``ratings``:"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:117
msgid ""
"Create a :ref:`compound index <index-type-compound>` on the ``item`` field "
"and the ``ratings`` field:"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:124
msgid "The following query specifies a condition on both keys of the index:"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:132
#: ../source/core/multikey-index-bounds.txt:192
msgid "the bounds for the ``item: \"XYZ\"`` predicate are ``[ [ \"XYZ\", \"XYZ\" ] ]``;"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:134
msgid ""
"the bounds for the ``ratings: { $gte: 3 }`` predicate are ``[ [ 3, Infinity "
"] ]``."
msgstr ""

#: ../source/core/multikey-index-bounds.txt:137
#: ../source/core/multikey-index-bounds.txt:273
msgid "MongoDB can compound the two bounds to use the combined bounds of:"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:144
msgid "Compound Index on Fields from an Array of Embedded Documents"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:146
msgid ""
"If an array contains embedded documents, to index on fields contained in the"
" embedded documents, use the :ref:`dotted field name <document-dot-"
"notation>` in the index specification. For instance, given the following "
"array of embedded documents:"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:155
msgid "The dotted field name for the ``score`` field is ``\"ratings.score\"``."
msgstr ""

#: ../source/core/multikey-index-bounds.txt:158
msgid "Compound Bounds of Non-array Field and Field from an Array"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:160
msgid ""
"Consider a collection ``survey2`` contains documents with a field ``item`` "
"and an array field ``ratings``:"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:176
msgid ""
"Create a :ref:`compound index <index-type-compound>` on the non-array field "
"``item`` as well as two fields from an array ``ratings.score`` and "
"``ratings.by``:"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:184
msgid "The following query specifies a condition on all three fields:"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:194
msgid ""
"the bounds for the ``score: { $lte: 5 }`` predicate are ``[ [ -Infinity, 5 ]"
" ]``;"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:197
msgid "the bounds for the ``by: \"anon\"`` predicate are ``[ \"anon\", \"anon\" ]``."
msgstr ""

#: ../source/core/multikey-index-bounds.txt:199
msgid ""
"MongoDB can compound the bounds for the ``item`` key with *either* the "
"bounds for ``\"ratings.score\"`` or the bounds for ``\"ratings.by\"``, "
"depending upon the query predicates and the index key values. MongoDB makes "
"no guarantee as to which bounds it compounds with the ``item`` field. For "
"instance, MongoDB will either choose to compound the ``item`` bounds with "
"the ``\"ratings.score\"`` bounds:"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:215
msgid ""
"Or, MongoDB may choose to compound the ``item`` bounds with "
"``\"ratings.by\"`` bounds:"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:227
msgid ""
"However, to compound the bounds for ``\"ratings.score\"`` with the bounds "
"for ``\"ratings.by\"``, the query must use :query:`$elemMatch`. See :ref"
":`compound-fields-from-array` for more information."
msgstr ""

#: ../source/core/multikey-index-bounds.txt:234
msgid "Compound Bounds of Index Fields from an Array"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:236
msgid "To compound together the bounds for index keys from the same array:"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:238
msgid ""
"the index keys must share the same field path up to but excluding the field "
"names, and"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:241
msgid ""
"the query must specify predicates on the fields using :query:`$elemMatch` on"
" that path."
msgstr ""

#: ../source/core/multikey-index-bounds.txt:244
msgid ""
"For a field in an embedded document, the :ref:`dotted field name <document-"
"dot-notation>`, such as ``\"a.b.c.d\"``, is the field path for ``d``. To "
"compound the bounds for index keys from the same array, the "
":query:`$elemMatch` must be on the path up to *but excluding* the field name"
" itself; i.e. ``\"a.b.c\"``."
msgstr ""

#: ../source/core/multikey-index-bounds.txt:250
msgid ""
"For instance, create a :ref:`compound index <index-type-compound>` on the "
"``ratings.score`` and the ``ratings.by`` fields:"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:257
msgid ""
"The fields ``\"ratings.score\"`` and ``\"ratings.by\"`` share the field path"
" ``ratings``. The following query uses :query:`$elemMatch` on the field "
"``ratings`` to require that the array contains at least one *single* element"
" that matches both conditions:"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:268
msgid ""
"the bounds for the ``score: { $lte: 5 }`` predicate is ``[ -Infinity, 5 ]``;"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:271
msgid "the bounds for the ``by: \"anon\"`` predicate is ``[ \"anon\", \"anon\" ]``."
msgstr ""

#: ../source/core/multikey-index-bounds.txt:280
msgid "Query Without ``$elemMatch``"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:282
msgid ""
"If the query does *not* join the conditions on the indexed array fields with"
" :query:`$elemMatch`, MongoDB *cannot* compound their bounds. Consider the "
"following query:"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:290
msgid ""
"Because a single embedded document in the array does not need to meet both "
"criteria, MongoDB does *not* compound the bounds. When using a compound "
"index, if MongoDB cannot constrain all the fields of the index, MongoDB "
"always constrains the leading field of the index, in this case "
"``\"ratings.score\"``:"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:304
msgid "``$elemMatch`` on Incomplete Path"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:306
msgid ""
"If the query does not specify :query:`$elemMatch` on the path of the "
"embedded fields, up to but excluding the field names, MongoDB **cannot** "
"compound the bounds of index keys from the same array."
msgstr ""

#: ../source/core/multikey-index-bounds.txt:310
msgid ""
"For example, a collection ``survey3`` contains documents with a field "
"``item`` and an array field ``ratings``:"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:326
#: ../source/core/multikey-index-bounds.txt:384
msgid ""
"Create a :ref:`compound index <index-type-compound>` on the "
"``ratings.score.q1`` and the ``ratings.score.q2`` fields:"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:333
msgid ""
"The fields ``\"ratings.score.q1\"`` and ``\"ratings.score.q2\"`` share the "
"field path ``\"ratings.score\"`` and the :query:`$elemMatch` must be on that"
" path."
msgstr ""

#: ../source/core/multikey-index-bounds.txt:337
msgid ""
"The following query, however, uses an :query:`$elemMatch` but not on the "
"required path:"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:344
msgid ""
"As such, MongoDB **cannot** compound the bounds, and the "
"``\"ratings.score.q2\"`` field will be unconstrained during the index scan. "
"To compound the bounds, the query must use :query:`$elemMatch` on the path "
"``\"ratings.score\"``:"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:354
msgid "Compound ``$elemMatch`` Clauses"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:356
msgid ""
"Consider a query that contains multiple :query:`$elemMatch` clauses on "
"different field paths, for instance, ``\"a.b\": { $elemMatch: ... }, "
"\"a.c\": { $elemMatch: ... }``. MongoDB cannot combine the bounds of the "
"``\"a.b\"`` with the bounds of ``\"a.c\"`` since ``\"a.b\"`` and ``\"a.c\"``"
" also require :query:`$elemMatch` on the path ``a``."
msgstr ""

#: ../source/core/multikey-index-bounds.txt:362
msgid ""
"For example, a collection ``survey4`` contains documents with a field "
"``item`` and an array field ``ratings``:"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:396
msgid "Consider the following query with two :query:`$elemMatch` clauses:"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:409
msgid ""
"the bounds for the ``\"ratings.score\"`` predicate are the compound bounds:"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:416
msgid ""
"the bounds for the ``\"ratings.certainty\"`` predicate are the compound "
"bounds:"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:423
msgid ""
"However, MongoDB cannot compound the bounds for ``\"ratings.score\"`` and "
"``\"ratings.certainty\"`` since :query:`$elemMatch` does not join the two. "
"Instead, MongoDB constrains the leading field of the index "
"``\"ratings.score.q1\"`` which can be compounded with the bounds for "
"``\"ratings.score.q2\"``:"
msgstr ""

#: ../source/core/multikey-index-bounds.txt:0
msgid "On this page"
msgstr ""
