#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/query/where.txt:3
msgid "$where"
msgstr ""

#: ../source/reference/operator/query/where.txt:15
msgid ""
"Use the :query:`$where` operator to pass either a string containing a "
"JavaScript expression or a full JavaScript function to the query system. The"
" :query:`$where` provides greater flexibility, but requires that the "
"database processes the JavaScript expression or function for *each* document"
" in the collection. Reference the document in the JavaScript expression or "
"function using either ``this`` or ``obj`` ."
msgstr ""

#: ../source/reference/operator/query/where.txt:24
msgid "Behavior"
msgstr ""

#: ../source/reference/operator/query/where.txt:27
msgid "Restrictions"
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:1
msgid ""
"In MongoDB 2.4, :dbcommand:`map-reduce operations <mapReduce>`, the "
":dbcommand:`group` command, and :query:`$where` operator expressions "
"**cannot** access certain global functions or properties, such as ``db``, "
"that are available in the :program:`mongo` shell."
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:6
msgid ""
"When upgrading to MongoDB 2.4, you will need to refactor your code if your "
":dbcommand:`map-reduce operations <mapReduce>`, :dbcommand:`group` commands,"
" or :query:`$where` operator expressions include any global shell functions "
"or properties that are no longer available, such as ``db``."
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:12
msgid ""
"The following JavaScript functions and properties **are available** to "
":dbcommand:`map-reduce operations <mapReduce>`, the :dbcommand:`group` "
"command, and :query:`$where` operator expressions in MongoDB 2.4:"
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:19
msgid "Available Properties"
msgstr ""

#: ../source/includes/fact-group-map-reduce-where-limitations-in-24.rst:20
msgid "Available Functions"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``args``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``MaxKey``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``MinKey``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``assert()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``BinData()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``DBPointer()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``DBRef()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``doassert()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``emit()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``gc()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``HexData()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``hex_md5()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``isNumber()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``isObject()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``ISODate()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``isString()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``Map()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``MD5()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``NumberInt()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``NumberLong()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``ObjectId()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``print()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``printjson()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``printjsononeline()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``sleep()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``Timestamp()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``tojson()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``tojsononeline()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``tojsonObject()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``UUID()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "``version()``"
msgstr ""

#: ../source/reference/operator/query/where.txt:34
msgid "``elemMatch``"
msgstr ""

#: ../source/reference/operator/query/where.txt:38
msgid ""
"Only apply the :query:`$where` query operator to top-level documents. The "
":query:`$where` query operator will not work inside a nested document, for "
"instance, in an :query:`$elemMatch` query."
msgstr ""

#: ../source/reference/operator/query/where.txt:43
msgid "Considerations"
msgstr ""

#: ../source/reference/operator/query/where.txt:45
msgid "Do not use global variables."
msgstr ""

#: ../source/reference/operator/query/where.txt:47
msgid ""
":query:`$where` evaluates JavaScript and cannot take advantage of indexes. "
"Therefore, query performance improves when you express your query using the "
"standard MongoDB operators (e.g., :query:`$gt`, :query:`$in`)."
msgstr ""

#: ../source/reference/operator/query/where.txt:58
msgid ""
"Using normal non\\-:query:`$where` query statements provides the following "
"performance advantages:"
msgstr ""

#: ../source/reference/operator/query/where.txt:61
msgid ""
"MongoDB will evaluate non\\-:query:`$where` components of query before "
":query:`$where` statements. If the non\\-:query:`$where` statements match no"
" documents, MongoDB will not perform any query evaluation using "
":query:`$where`."
msgstr ""

#: ../source/reference/operator/query/where.txt:66
msgid "The non\\-:query:`$where` query statements may use an :term:`index`."
msgstr ""

#: ../source/reference/operator/query/where.txt:70
msgid "Examples"
msgstr ""

#: ../source/reference/operator/query/where.txt:72
msgid "Consider the following examples:"
msgstr ""

#: ../source/reference/operator/query/where.txt:82
msgid ""
"Additionally, if the query consists only of the :query:`$where` operator, "
"you can pass in just the JavaScript expression or JavaScript functions, as "
"in the following examples:"
msgstr ""

#: ../source/reference/operator/query/where.txt:92
msgid ""
"You can include both the standard MongoDB operators and the :query:`$where` "
"operator in your query, as in the following examples:"
msgstr ""

#: ../source/reference/operator/query/where.txt:0
msgid "On this page"
msgstr ""

#: ../source/reference/operator/query/where.txt:52
msgid ""
"In general, you should use :query:`$where` only when you can't express your "
"query using another operator. If you must use :query:`$where`, try to "
"include at least one other standard query operator to filter the result set."
" Using :query:`$where` alone requires a collection scan."
msgstr ""

#~ msgid ""
#~ "In general, you should use :query:`$where` only when you can't express your "
#~ "query using another operator. If you must use :query:`$where`, try to "
#~ "include at least one other standard query operator to filter the result set."
#~ " Using :query:`$where` alone requires a table scan."
#~ msgstr ""
