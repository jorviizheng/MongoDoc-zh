#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-05-31 19:15-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/operator/aggregation/lookup.txt:3
msgid "$lookup (aggregation)"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:0
msgid "On this page"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:20
msgid ""
"Performs a left outer join to an unsharded collection in the *same* database"
" to filter in documents from the \"joined\" collection for processing. The "
":pipeline:`$lookup` stage does an equality match between a field from the "
"input documents with a field from the documents of the \"joined\" "
"collection."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:26
msgid ""
"To each input document, the :pipeline:`$lookup` stage adds a new array field"
" whose elements are the matching documents from the \"joined\" collection. "
"The :pipeline:`$lookup` stage passes these reshaped documents to the next "
"stage."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:31
msgid "The :pipeline:`$lookup` stage has the following syntax:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:45
msgid "The :pipeline:`$lookup` takes a document with the following fields:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:51
msgid "Field"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:52
msgid "Description"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:54
msgid "``from``"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:56
msgid ""
"Specifies the collection in the *same* database to perform the join with. "
"The ``from`` collection cannot be sharded."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:59
msgid "``localField``"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:61
msgid ""
"Specifies the field from the documents input to the :pipeline:`$lookup` "
"stage. :pipeline:`$lookup` performs an equality match on the ``localField`` "
"to the ``foreignField`` from the documents of the ``from`` collection. If an"
" input document does not contain the ``localField``, the :pipeline:`$lookup`"
" treats the field as having a value of ``null`` for matching purposes."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:69
msgid "``foreignField``"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:71
msgid ""
"Specifies the field from the documents in the ``from`` collection. "
":pipeline:`$lookup` performs an equality match on the ``foreignField`` to "
"the ``localField`` from the input documents. If a document in the ``from`` "
"collection does not contain the ``foreignField``, the :pipeline:`$lookup` "
"treats the value as ``null`` for matching purposes."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:78
msgid "``as``"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:80
msgid ""
"Specifies the name of the new array field to add to the input documents. The"
" new array field contains the matching documents from the ``from`` "
"collection. If the specified name already exists in the input document, the "
"existing field is *overwritten*."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:88
msgid ""
"If your ``localField`` is an array, you'll need to add an "
":pipeline:`$unwind` stage to your pipeline. See the :ref:`example <unwind-"
"example>` on this page."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:93
msgid "Examples"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:96
msgid "Perform a Join with ``$lookup``"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:98
msgid "A collection ``orders`` contains the following documents:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:106
#: ../source/reference/operator/aggregation/lookup.txt:184
msgid "Another collection ``inventory`` contains the following documents:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:117
msgid ""
"The following aggregation operation on the ``orders`` collection joins the "
"documents from ``orders`` with the documents from the ``inventory`` "
"collection using the fields ``item`` from the ``orders`` collection and the "
"``sku`` field from the ``inventory`` collection:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:137
msgid "The operation returns the following documents:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:170
msgid "Use ``$lookup`` with an Array"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:172
msgid ""
"If your ``localField`` is an array and you'd like to match the elements "
"inside it against a ``foreignField`` which is a single element, you'll need "
"to :pipeline:`$unwind` the array as one stage of the aggregation pipline."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:177
msgid "Consider a collection ``orders`` with the following document:"
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:195
msgid ""
"The following aggregation operation performs a join on documents in the "
"``orders`` collection which match a particular element of the ``specs`` "
"array to the ``size`` field in the ``inventory`` collection."
msgstr ""

#: ../source/reference/operator/aggregation/lookup.txt:219
msgid "The operation returns the following document:"
msgstr ""
