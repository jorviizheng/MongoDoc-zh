#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/method/rs.reconfig.txt:3
msgid "rs.reconfig()"
msgstr ""

#: ../source/reference/method/rs.reconfig.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/method/rs.reconfig.txt:18
msgid ""
"Reconfigures an existing replica set, overwriting the existing replica set "
"configuration. To run the method, you must connect to the :term:`primary` of"
" the replica set."
msgstr ""

#: ../source/reference/method/rs.reconfig.txt:24
msgid ""
"To reconfigure an existing replica set, first retrieve the current "
"configuration with :method:`rs.conf()`, modify the configuration document as"
" needed, and then pass the modified document to :method:`rs.reconfig()`."
msgstr ""

#: ../source/reference/method/rs.reconfig.txt:29
msgid ""
":method:`rs.reconfig()` provides a wrapper around the "
":dbcommand:`replSetReconfig` command."
msgstr ""

#: ../source/reference/method/rs.reconfig.txt:32
msgid ""
"The ``force`` parameter allows a reconfiguration command to be issued to a "
"non-primary node."
msgstr ""

#: ../source/reference/method/rs.reconfig.txt:36
msgid "Behavior"
msgstr ""

#: ../source/reference/method/rs.reconfig.txt:38
msgid ""
"The :method:`rs.reconfig()` shell method can trigger the current primary to "
"step down in some situations. When the primary steps down, it forcibly "
"closes all client connections. This is by design. Since it may take a period"
" of time to elect a new primary, schedule reconfiguration changes during "
"maintenance periods to minimize loss of write availability."
msgstr ""

#: ../source/reference/method/rs.reconfig.txt:46
msgid ""
"Using :method:`rs.reconfig()` with ``{ force: true }`` can lead to "
":term:`rollback` of committed writes. Exercise caution when using this "
"option."
msgstr ""

#: ../source/reference/method/rs.reconfig.txt:52
msgid "Examples"
msgstr ""

#: ../source/reference/method/rs.reconfig.txt:54
msgid "A replica set named ``rs0`` has the following configuration:"
msgstr ""

#: ../source/reference/method/rs.reconfig.txt:103
msgid ""
"The last statement calls the :method:`rs.reconfig()` method with the "
"modified ``cfg`` to initialize this new configuration. Upon successful "
"reconfiguration, the replica set configuration will resemble the following:"
msgstr ""

#: ../source/reference/method/rs.reconfig.txt:130
msgid ""
":method:`rs.conf()`, :ref:`replSetGetConfig-output` and "
":doc:`/administration/replica-sets`."
msgstr ""

#: ../source/reference/method/rs.reconfig.txt:0
msgid "On this page"
msgstr ""

#: ../source/reference/method/rs.reconfig.txt:77
msgid ""
"The following sequence of operations updates the "
":rsconf:`members[n].priority` of the second member. The operations are "
"issued through a :program:`mongo` shell connected to the primary."
msgstr ""

#: ../source/reference/method/rs.reconfig.txt:88
msgid ""
"The first statement uses the :method:`rs.conf()` method to retrieve a "
"document containing the current :ref:`configuration <replSetGetConfig-"
"output>` for the replica set and sets the document to the local variable "
"``cfg``."
msgstr ""

#: ../source/reference/method/rs.reconfig.txt:93
msgid ""
"The second statement sets a :rsconf:`members[n].priority` value to the "
"second document in the :rsconf:`members` array. For additional settings, see"
" :ref:`replica set configuration settings <replSetGetConfig-output>`."
msgstr ""

#: ../source/reference/method/rs.reconfig.txt:99
msgid ""
"To access the member configuration document in the array, the statement uses"
" the array index and **not** the replica set member's "
":rsconf:`members[n]._id` field."
msgstr ""

#~ msgid ""
#~ "The following sequence of operations updates the "
#~ ":data:`~replSetGetConfig.members[n].priority` of the second member. The "
#~ "operations are issued through a :program:`mongo` shell connected to the "
#~ "primary."
#~ msgstr ""

#~ msgid ""
#~ "The first statement uses the :method:`rs.conf()` method to retrieve a "
#~ "document containing the current :doc:`configuration </reference/replica-"
#~ "configuration>` for the replica set and sets the document to the local "
#~ "variable ``cfg``."
#~ msgstr ""

#~ msgid ""
#~ "The second statement sets a :data:`~replSetGetConfig.members[n].priority` "
#~ "value to the second document in the :data:`~replSetGetConfig.members` array."
#~ " For additional settings, see :ref:`replica set configuration settings "
#~ "<replica-set-configuration-settings>`."
#~ msgstr ""

#~ msgid ""
#~ "To access the member configuration document in the array, the statement uses"
#~ " the array index and **not** the replica set member's "
#~ ":data:`~replSetGetConfig.members[n]._id` field."
#~ msgstr ""
