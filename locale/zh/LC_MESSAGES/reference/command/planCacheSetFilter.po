#
msgid ""
msgstr ""
"Project-Id-Version: mongodb-manual 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-20 19:13-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/reference/command/planCacheSetFilter.txt:3
msgid "planCacheSetFilter"
msgstr ""

#: ../source/reference/command/planCacheSetFilter.txt:14
msgid "Definition"
msgstr ""

#: ../source/reference/command/planCacheSetFilter.txt:20
msgid ""
"Set an :ref:`index filter <index-filters>` for a collection. If an index "
"filter already exists for the :term:`query shape`, the command overrides the"
" previous index filter."
msgstr ""

#: ../source/reference/command/planCacheSetFilter.txt:24
msgid "The command has the following syntax:"
msgstr ""

#: ../source/reference/command/planCacheSetFilter.txt:38
msgid "The :dbcommand:`planCacheSetFilter` command has the following field:"
msgstr ""

#: ../source/reference/command/planCacheSetFilter.txt:42
msgid ""
"Index filters only exist for the duration of the server process and do not "
"persist after shutdown; however, you can also clear existing index filters "
"using the :dbcommand:`planCacheClearFilters` command."
msgstr ""

#: ../source/reference/command/planCacheSetFilter.txt:47
msgid "Required Access"
msgstr ""

#: ../source/reference/command/planCacheSetFilter.txt:49
msgid ""
"A user must have access that includes the :authaction:`planCacheIndexFilter`"
" action."
msgstr ""

#: ../source/reference/command/planCacheSetFilter.txt:55
msgid "Examples"
msgstr ""

#: ../source/reference/command/planCacheSetFilter.txt:58
msgid "Set Filter on Query Shape Consisting of Predicate Only"
msgstr ""

#: ../source/reference/command/planCacheSetFilter.txt:79
msgid ""
"In the query predicate, only the structure of the predicate, including the "
"field names, are significant; the values are insignificant. As such, the "
"created filter applies to the following operations:"
msgstr ""

#: ../source/reference/command/planCacheSetFilter.txt:88
msgid ""
"To see whether MongoDB will apply an index filter for a query shape, check "
"the :data:`~explain.queryPlanner.indexFilterSet` field of either the "
":method:`db.collection.explain()` or the :method:`cursor.explain()` method."
msgstr ""

#: ../source/reference/command/planCacheSetFilter.txt:94
msgid ""
"Set Filter on Query Shape Consisting of Predicate, Projection, and Sort"
msgstr ""

#: ../source/reference/command/planCacheSetFilter.txt:96
msgid ""
"The following example creates an index filter for the ``orders`` collection."
" The filter applies to queries whose predicate is an equality match on the "
"``item`` field, where only the ``quantity`` field is projected and an "
"ascending sort by ``order_date`` is specified."
msgstr ""

#: ../source/reference/command/planCacheSetFilter.txt:115
msgid ""
"For the query shape, the query optimizer will only consider indexed plans "
"which use the index ``{ item: 1, order_date: 1, quantity: 1 }``."
msgstr ""

#: ../source/reference/command/planCacheSetFilter.txt:119
msgid ":dbcommand:`planCacheClearFilters`, :dbcommand:`planCacheListFilters`"
msgstr ""

#: ../source/reference/command/planCacheSetFilter.txt:0
msgid "On this page"
msgstr ""

#: ../source/reference/command/planCacheSetFilter.txt:60
msgid ""
"The following example creates an index filter on the ``orders`` collection "
"such that for queries that consist only of an equality match on the "
"``status`` field without any projection and sort, the query optimizer "
"evaluates only the two specified indexes and the collection scan for the "
"winning plan:"
msgstr ""

#~ msgid ""
#~ "The following example creates an index filter on the ``orders`` collection "
#~ "such that for queries that consists only of an equality match on the "
#~ "``status`` field without any projection and sort, the query optimizer "
#~ "evaluates only the two specified indexes and the collection scan for the "
#~ "winning plan:"
#~ msgstr ""
