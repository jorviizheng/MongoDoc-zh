ref: _keyfile-intro
content: |

   The contents of the :ref:`keyfile <internal-auth-keyfile>` serves as
   the shared password for the members of the {{deployment}}. The
   content of the keyfile must be the same for all members of the
   {{deployment}}.

   You can generate a keyfile using any method you choose. The contents
   of the keyfile must be between 6 and 1024 characters long. 

   .. note::

      .. include:: /includes/extracts/keyfile-file-permission.rst

   The following operation uses ``openssl`` to generate a complex
   pseudo-random 1024 character string to use for a keyfile. It then
   uses ``chmod`` to change file permissions to provide read permissions
   for the file owner only:
---
ref: keyfile-intro-replica-set
source:
   file: extracts-keyfile-info.yaml
   ref: _keyfile-intro
replacement:
   deployment: replica set
---
ref: keyfile-intro-sharded-cluster
source:
   file: extracts-keyfile-info.yaml
   ref: _keyfile-intro
replacement:
   deployment: sharded cluster
---
ref: _keyfile-distribution
content: |
   Copy the keyfile to each server hosting the {{deployment}} members. Use a
   consistent location for each server.

   .. important::
      Do not use shared network locations or storage mediums such as USB
      drives for storing the keyfile.

   Ensure that the user running the {{programs}} can access the keyfile.
---
ref:  keyfile-distribution-replica-set
source:
   file: extracts-keyfile-info.yaml
   ref: _keyfile-distribution
replacement:
   deployment: replica set
   programs: :program:`mongod` instances
---
ref: keyfile-distribution-sharded-cluster
source:
   file: extracts-keyfile-info.yaml
   ref: _keyfile-distribution
replacement:
   deployment: sharded cluster
   programs: :program:`mongod` or :program:`mongos` instances
---
ref: keyfile-file-permission
content: |
  On UNIX systems, the keyfile must not have group or world
  permissions. On Windows systems, keyfile permissions are not checked.
...
